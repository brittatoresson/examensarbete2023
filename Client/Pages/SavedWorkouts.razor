@page "/saved-workout"
@using Examensarbete.Shared.Model;
@using Examensarbete.Client.Components;
@inject ExerciseService exerciseService;

<MudPaper Class="savedWorkouts">
    @if (exerciseService.WorkoutList.Count < 1)
    {
        <LoadingSpinner></LoadingSpinner>
    }
    else
    {
        @foreach (var workout in exerciseService.WorkoutList)
        {
            //SKA SummerKOmponenten användas här??
            <ul>
                @if (workout.Focus == "Interval")
                {
                    <li>Intervall</li>
                    <li>On: @workout.IntervallOn min</li>
                    <li>Rest: @workout.IntervallOff min</li>
                    <li>@workout.Rounds rounds</li>
                }
                @foreach (var item in workout.Exercises)
                {
                    <li>@item.exercise, @item.Repetition reps</li>
                }
                <li>Total time: @workout.TotalTime min</li>
                <li>@workout.Date.Value.Date.ToShortDateString()</li>


                <MudButton OnClick="(() => Delete(workout.id))">delete</MudButton>

            </ul>
            <MudScrollToTop>
                <MudFab Color="Color.Tertiary" Icon="@Icons.Material.Filled.ArrowCircleUp" />
            </MudScrollToTop>
        }
    }
</MudPaper>



@code {

    protected override async Task OnInitializedAsync()
    {
        await exerciseService.GetWorkout();
    }


    public async Task GetWorkout()
    {
        await exerciseService.GetWorkout();
        StateHasChanged();
    }

    public async void Delete(int? id)
    {
        await exerciseService.DeleteWorkout(id);
        GetWorkout();
    }

}
