@page "/saved-workout"
@using Examensarbete.Shared.Model;
@using Examensarbete.Client.Components;
@inject ExerciseService exerciseService;

<MudPaper Class="savedWorkouts" id="id_scroll">
    @if (exerciseService.WorkoutList.Count < 1)
    {
        <LoadingSpinner></LoadingSpinner>
    }
    else
    {
        @foreach (var workout in exerciseService.WorkoutList)
        {
            <MudGrid>
                <MudItem xs="8" sm="10">
                    <ul>
                        <h6> @workout.Date.Value.Date.ToShortDateString()</h6>
                        <p>@workout.Focus</p>

                        @if (workout.Focus == "Interval")
                        {
                            @*<li>Intervall</li>*@
                            <li>On: @workout.IntervallOn min</li>
                            <li>Rest: @workout.IntervallOff min</li>
                            <li>@workout.Rounds rounds</li>
                        }
                        @if (workout.Exercises is not null)
                        {
                            @foreach (var item in workout.Exercises)
                            {
                                <li>@item.exercise, @item.Repetition reps</li>
                            }
                            }
                            else
                            {
                                throw new ArgumentNullException("fel");
                            }
                        <br />
                        <li> @(workout.Rounds > 0 ? "Rounds: " + workout.Rounds : "") </li>
                        <li>Total time: @workout.TotalTime min</li>

                        <MudTooltip Text="Add or update note" Placement="Placement.Left" Arrow="true">
                            <li @onclick="(() => UpdateNotes(workout.id))">
                                @(!String.IsNullOrEmpty(workout.Comment) ? "Note: " + workout.Comment
                            : "Add note")
                            </li>
                        </MudTooltip>

                        @if (Id == workout.id)
                        {
                            <li>
                                <MudInput @bind-Value="comment" Variant="Variant.Outlined" Margin="Margin.Dense"> </MudInput>
                                <MudIconButton Class="hoverBtn" Icon="@Icons.Material.Filled.CheckBox" Size="Size.Small" Color="Color.Primary" @onclick="(() =>UpdateExercise(workout, comment))"></MudIconButton>
                            </li>
                        }
                    </ul>
                </MudItem>

                <MudItem xs="2" sm="2">
                    <MudIconButton Class="hoverBtn" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" Color="Color.Primary" OnClick="(() => Delete(workout.id))"> </MudIconButton>
                </MudItem>

            </MudGrid>

            <MudScrollToTop>
                <MudFab Color="Color.Tertiary" Icon="@Icons.Material.Filled.ArrowCircleUp" />
            </MudScrollToTop>
        }
    }
    <MudScrollToTop TopOffset="100"
                    Selector="#id_scroll"
                    VisibleCssClass="visible absolute"
                    HiddenCssClass="invisible">
        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.ArrowUpward" Color="Color.Default">Go to top</MudButton>
    </MudScrollToTop>
</MudPaper>
