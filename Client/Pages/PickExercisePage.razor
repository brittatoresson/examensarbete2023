@page "/exercise"
@using Examensarbete.Shared.Model;
@using Examensarbete.Client.Components;
@inject ExerciseService exerciseService;
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<MudPaper Class="pageContainer" Elevation="0">

    <MudGrid>

        @if (exerciseService.ExerciseList.Count < 1)
        {
            <LoadingSpinner></LoadingSpinner>
        }
        else
        {
            @foreach (var item in exerciseService.ExerciseList)
            {
                <MudItem xs="4" sm="4">
                    <MudCard Class="@(item.isActive ? "" :"activeExercise")"
                         @onclick="(() => PickExercise(item))">@item.Name
                    </MudCard>
                </MudItem>
            }
        }
    </MudGrid>
    @if (pickExercise.Count > 0)
    {
        <NavigationButton Url="focus" />
    }

</MudPaper>

@code {
    List<ExerciseModel> pickExercise = new();
    CreateWorkout createWorkout = new();

    protected override async Task OnInitializedAsync()
    {
        await exerciseService.GetExercises();
    }

    public async Task PickExercise(ExerciseModel exercise)
    {
        exercise.isActive = true;
        pickExercise.Add(exercise);
        var shuffledList = createWorkout.ShuffelList(pickExercise);

        SaveExercise(shuffledList);
    }

    public async Task SaveExercise(List<ExerciseModel> shuffledList)
    {
        WorkoutModel workout = new();
        var randomExercise = createWorkout.RandomExercise(pickExercise);
        workout.Exercise = randomExercise.Name;

        List<ExercisesListModel> exercise = new();

        int id = 125;
        int WorkoutModelid = 93;
        foreach (var item in shuffledList)
        {
            id = id + 1;
            ExercisesListModel ex = new();
            ex.exercise = item.Name;
            ex.id = id;
            ex.WorkoutModelid = id;
            ex.Repetition = createWorkout.RandomRepetitions(50);
            exercise.Add(ex);
        }

        workout.Exercises = exercise;
        workout.WorkoutModelid = WorkoutModelid;

        await sessionStorage.SetItemAsync("Workout", workout);
    }
}
