@page "/focus"
@using MudBlazor
@using Examensarbete.Client.Components
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage

<NavigationButton Url="exercise" Placeholder="Back" />
<MudPaper Class="pageContainer" Elevation="0">

    @foreach (var item in setFocus)
    {

        <MudCard Class="@(item.IsActive ? "focusCard" :"activeExercise focusCard")" @onclick="(() => SetFocus(item))">@item.Name</MudCard>
    }

    @if (hasFocusArea)
    {
        <NavigationButton Url="timer" Placeholder="Next" />
    }

</MudPaper>

@code {
    public bool hasFocusArea;
    List<Focus> setFocus = new();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        setFocus.Add(new Focus { Name = "Interval", IsActive = false });
        setFocus.Add(new Focus { Name = "Steady", IsActive = false });
        setFocus.Add(new Focus { Name = "Strength", IsActive = false });
    }

    public async Task SetFocus(Focus focus)
    {
        foreach (var item in setFocus)
        {
            item.IsActive = false;
        }

        focus.IsActive = !focus.IsActive;
        hasFocusArea = true;
        await sessionStorage.SetItemAsync("Focus", focus.Name);
    }
}
