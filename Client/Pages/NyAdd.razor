@page "/user/add"
@page "/user/edit/{userId:int}"
@*@page "/user/edit/{id:int}"*@
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@using Newtonsoft.Json;

@using Examensarbete.Shared.Model
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h1>@Title User</h1>
<hr />
<EditForm Model="@user" OnValidSubmit="SaveUser">
    <DataAnnotationsValidator />
    <div class="mb-3">
        <label for="Name" class="form-label">Ex</label>
        <div class="col-md-4">
            <InputText class="form-control" @bind-Value="user.Exercise" />
        </div>
        <ValidationMessage For="@(() => user.Exercise)" />
    </div>
    <div class="mb-3">
        <label for="Address" class="form-label">Date</label>
        <div class="col-md-4">
            @*<InputNumber class="form-control" @bind-Value="user.Date"> </InputNumber>*@
            <InputDate class="form-control" @bind-Value="user.Date"></InputDate>

        </div>
        <ValidationMessage For="@(() => user.Date)" />
    </div>
    <div class="mb-3">
        <label for="Cellnumber" class="form-label">ID</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="user.id"> </InputNumber>

        </div>
        <ValidationMessage For="@(() => user.id)" />
    </div>
    <div class="mb-3">
        <label for="Emailid" class="form-label">E-mail</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="user.Repetition"> </InputNumber>
        </div>
        <ValidationMessage For="@(() => user.Repetition)" />
    </div>
    <div class="mb-3">
        <label for="Emailid" class="form-label">E-mail</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="user.Rounds"> </InputNumber>
        </div>
        <ValidationMessage For="@(() => user.Rounds)" />
    </div>   <div class="mb-3">
        <label for="Emailid" class="form-label">total time</label>
        <div class="col-md-4">
            <InputNumber class="form-control" @bind-Value="user.TotalTime"> </InputNumber>
        </div>
        <ValidationMessage For="@(() => user.TotalTime)" />
    </div>
    <div class="form-group">
        <button type="submit" class="btn btn-primary">Save</button>
        <button class="btn btn-light" @onclick="Cancel">Cancel</button>
    </div>
</EditForm>
@code {
    [Parameter]
    public int userId { get; set; }
    protected string Title = "Add";
    protected Ny user = new();
    protected override async Task OnParametersSetAsync()
    {
        if (userId != 0)
        {
            Title = "Edit";
            user = await Http.GetFromJsonAsync<Ny>("api/User/" + userId);
        }
    }

    List<Ny> myCustomObject;

    protected async Task SaveUser()
    {

        var name = await sessionStorage.GetItemAsync<string>("Exercise");

        myCustomObject = JsonConvert.DeserializeObject<List<Ny>>(name);

        if (user.id != 0)
        {
            await Http.PutAsJsonAsync("api/Ny", user);
        }
        else
        {
            await Http.PostAsJsonAsync("api/Ny", user);
        }
        Cancel();
    }
    public void Cancel()
    {
        NavigationManager.NavigateTo("/nydetails");
    }
}