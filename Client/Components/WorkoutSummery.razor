@using Examensarbete.Shared.Model;
@using Newtonsoft.Json;
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject Microsoft.AspNetCore.Components.NavigationManager NavigationManger;
@inject HttpClient Http

<MudPaper Class="positionCenter" Elevation="0">
    @if (!String.IsNullOrEmpty(newWorkout.Exercise))
    {
        <MudText>Sammanfattning</MudText>
        <ul>
            @if (newWorkout.Focus == "Interval")
            {
                <li>Intervall</li>
                <li>On: @newWorkout.IntervallOn min</li>
                <li>Rest: @newWorkout.IntervallOff min</li>
                <li>@newWorkout.Rounds rounds</li>
            }
            @foreach (var item in newWorkout.Exercises)
            {
                <li>@item.exercise, @item.Repetition reps</li>
            }
            <li>Type: @newWorkout.Focus</li>
            <li> @(newWorkout.Repetition > 0 ? @newWorkout.Repetition +"repetitions" : "") </li>
            <li>Total time: @newWorkout.TotalTime min</li>
        </ul>
    }

</MudPaper>

@code {
    WorkoutModel? newWorkout = new();

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        var focus = await sessionStorage.GetItemAsync<string>("Focus");
        //var focus = await sessionStorage.GetItemAsync<string>("Focus");
        //var test = JsonConvert.DeserializeObject<WorkoutModel>(focus);

        var workout = await sessionStorage.GetItemAsync<string>("Workout");
        var time = await sessionStorage.GetItemAsync<int>("Time");
        newWorkout = JsonConvert.DeserializeObject<WorkoutModel>(workout);
        newWorkout.TotalTime = time;
        newWorkout.Focus = focus;
        newWorkout.Date = DateTime.Now;



        CreateWorkout createWorkout = new();
        var GetRoundSRepsFocus = createWorkout.GetFocusArea(focus);
        newWorkout.Repetition = GetRoundSRepsFocus.Repetition;
        newWorkout.IntervallOff = GetRoundSRepsFocus.IntervallOff;
        newWorkout.IntervallOn = GetRoundSRepsFocus.IntervallOn;

        await sessionStorage.SetItemAsync<WorkoutModel>("Workout", newWorkout);
    }
}
